[{"/Users/akamli/Desktop/gqltuto/client/src/index.js":"1","/Users/akamli/Desktop/gqltuto/client/src/App.js":"2","/Users/akamli/Desktop/gqltuto/client/src/pages/Home.js":"3","/Users/akamli/Desktop/gqltuto/client/src/context/authContext.js":"4","/Users/akamli/Desktop/gqltuto/client/src/components/Nav.js":"5","/Users/akamli/Desktop/gqltuto/client/src/pages/auth/Login.js":"6","/Users/akamli/Desktop/gqltuto/client/src/pages/auth/Register.js":"7","/Users/akamli/Desktop/gqltuto/client/src/firebase.js":"8"},{"size":461,"mtime":1613582807000,"results":"9","hashOfConfig":"10"},{"size":841,"mtime":1613583074000,"results":"11","hashOfConfig":"10"},{"size":1740,"mtime":1613320883000,"results":"12","hashOfConfig":"10"},{"size":663,"mtime":1613319857000,"results":"13","hashOfConfig":"10"},{"size":1459,"mtime":1613399776000,"results":"14","hashOfConfig":"10"},{"size":759,"mtime":1613407920000,"results":"15","hashOfConfig":"10"},{"size":1539,"mtime":1613583076000,"results":"16","hashOfConfig":"10"},{"size":670,"mtime":1613582214000,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ycm9x2",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"/Users/akamli/Desktop/gqltuto/client/src/index.js",[],"/Users/akamli/Desktop/gqltuto/client/src/App.js",[],["37","38"],"/Users/akamli/Desktop/gqltuto/client/src/pages/Home.js",["39"],"import React, { useContext } from \"react\";\nimport { gql } from \"apollo-boost\";\nimport { useQuery, useLazyQuery } from \"@apollo/react-hooks\";\nimport { AuthContext } from \"../context/authContext\";\nimport { useHistory } from \"react-router-dom\";\n\nconst GET_ALL_POSTS = gql`\n  {\n    allPosts {\n      id\n      title\n      description\n    }\n  }\n`;\n\nconst Home = () => {\n  const { data, loading, error } = useQuery(GET_ALL_POSTS);\n  const [fetchPosts, { data: postsData }] = useLazyQuery(GET_ALL_POSTS);\n\n  const { state, dispatch } = useContext(AuthContext);\n\n  //react router\n  let history = useHistory();\n\n  const updateUserName = () => {\n    dispatch({\n      type: \"LOGGED_IN_USER\",\n      payload: \"akamli 1337\",\n    });\n  };\n\n  if (error) {\n    throw error;\n  }\n\n  if (loading) {\n    return <p>Loading...</p>;\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"row p-5\">\n        {data.allPosts.map((p) => (\n          <div className=\"col-md-4\" key={p.id}>\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <div className=\"card-title\">\n                  <h4>{p.title}</h4>\n                </div>\n                <div className=\"card-text\">\n                  <p>{p.description}</p>\n                </div>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n      <button\n        className=\"btn-btn-raiswd btn-primary\"\n        onClick={() => fetchPosts()}\n      >\n        Fetch Data\n      </button>\n      <div>{JSON.stringify(postsData)}</div>\n      <hr />\n      {JSON.stringify(state.user)}\n      <hr />\n      <button className=\"btn btn-primary\" onClick={updateUserName}>\n        Change user name\n      </button>\n    </div>\n  );\n};\n\nexport default Home;\n","/Users/akamli/Desktop/gqltuto/client/src/context/authContext.js",[],"/Users/akamli/Desktop/gqltuto/client/src/components/Nav.js",[],"/Users/akamli/Desktop/gqltuto/client/src/pages/auth/Login.js",["40"],"import React, { useState } from \"react\";\n\nconst Login = () => {\n  const [email, setEmail] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const handleSubmit = () => {};\n  return (\n    <div className=\"container\">\n      <div className=\"row p-5\">\n        <h4>Login</h4>\n        <form onSubmit={handleSubmit}>\n          <div className=\"form-group\">\n            <label>Email Address</label>\n            <input\n              type=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              className=\"form-control\"\n              placeholder=\"Enter Email\"\n              desabled={loading}\n            ></input>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","/Users/akamli/Desktop/gqltuto/client/src/pages/auth/Register.js",[],"/Users/akamli/Desktop/gqltuto/client/src/firebase.js",[],{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":24,"column":7,"nodeType":"47","messageId":"48","endLine":24,"endColumn":14},{"ruleId":"45","severity":1,"message":"49","line":5,"column":19,"nodeType":"47","messageId":"48","endLine":5,"endColumn":29},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"no-unused-vars","'history' is assigned a value but never used.","Identifier","unusedVar","'setLoading' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]